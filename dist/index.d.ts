import { ExpressBatteriesConfig } from './types/config.js';
export { ErrorClass, OptionalElement, RestParams } from './types/config.js';
import { Express } from 'express';
export { Controller } from './decorators/routes/Controller.js';
export { Middleware, Middlewares } from './decorators/routes/Middleware.js';
export { ResponseType, ResponseTypeProps } from './decorators/routes/Response.js';
export { Delete, Get, Head, Options, Patch, Post, Put, Trace } from './decorators/routes/Route.js';
export { Body, BodyObjectHEaders } from './decorators/routes/validators/Body.js';
export { Params } from './decorators/routes/validators/Params.js';
export { Query } from './decorators/routes/validators/Query.js';
export { Inject } from './decorators/ioc/Inject.js';
export { CreateModule, DependencyLoader, ModuleProps, ServiceInjectable } from './decorators/ioc/Module.js';
export { ApiError } from './errors/baseError.js';
export { isValibotSchema } from './functions/isValibotSchema.js';
export { setUpControllers } from './functions/setUpControllers.js';
export { parse } from './functions/parse.js';
export { describeSetting } from './functions/describeSetting.js';
export { descriptionHttpCode, httpCodes } from './meta/httpCodes.js';
export { DECORATORS_METADATA_KEYS } from './meta/decorators.metadata.js';
export { SWAGGER_DOC } from './meta/docs_swagger.js';
export { GlobalConfig, expressBatteriesConfig } from './meta/config.js';
export { iocMetadata } from './meta/decorators/ioc.js';
export { addValidationMiddleware } from './meta/decorators/validators/functions.js';
export { bodyMetadata, paramsMetadata, queryMetadata } from './meta/decorators/validators/validators.js';
export { routeMetadata } from './meta/decorators/route/route.js';
export { controllerMetadata } from './meta/decorators/controller/controller.js';
export { createValidationRequestMiddleware } from './meta/decorators/route/functions.js';
export { RequestValidatorProps, requestValidator } from './middlewares/requestValidator.js';
export { swaggerUI } from './middlewares/swagger.js';
export { ControllerSymbol, IController } from './types/DevpsSymbols.js';
export { Class } from './types/class.js';
export { HttpMethodNumber } from './types/httpMethodNumer.js';
export { HttpMethodsExpress, OpenApiHttpMethods } from './types/httpMethods.js';
export { Dependency } from './types/ioc.js';
export { ALLOWED_METHODS, AllowedMethod, ApenApiHttpMethods, DescribeRouteOptions, EnhancedContentData, EnhancedMediaTypeObject, EnhancedRequestObject, EnhancedResponseObject, HandlerResponse, HasUndefined, OpenAPIRoute, OpenAPIRouteHandlerConfig, OpenApiRoute, OpenApiSpecsOptions, PromiseOr, ReponseParams, ResolverResult } from './types/openApi.js';
export { RequestValidationSchema } from './types/requestValidationSchema.js';
export { FileMimeType } from './types/httpfileheaders.js';
export { ResponseHeaderName } from './types/responseHeaders.js';
export { ExpressBatteriesTs } from './nameTsPlugin.js';
import 'body-parser';
import 'valibot';
import 'inversify';
import '@camflan/valibot-openapi-generator';
import './types/decorator.js';
import 'qs';
import 'express-serve-static-core';
import 'openapi-types';

declare const expressBatteries: (config?: ExpressBatteriesConfig) => Express;

export { ExpressBatteriesConfig, expressBatteries };
